import "copyrightAndOthers.stg"
import "primitiveLiteral.stg"

isTest() ::= "true"
skipBoolean() ::= "true"

targetPath() ::= "org/eclipse/collections/impl/iterator"

fileName(primitive) ::= "Singleton<primitive.name>IteratorTest"

class(primitive) ::= <<
<body(primitive.type, primitive.name)>
>>

body(type, name) ::= <<
<copyrightAndOthers()>

package org.eclipse.collections.impl.iterator;

import java.util.NoSuchElementException;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.fail;

/**
 * This file was automatically generated from template file singletonPrimitiveIterator.stg.
 */
public final class Singleton<name>IteratorTest
{
    @Test
    public void hasNext()
    {
        Singleton<name>Iterator iterator = new Singleton<name>Iterator(<(literal.(type))("5")>);
        assertTrue(iterator.hasNext());
        assertTrue(iterator.hasNext());
        iterator.next();
        assertFalse(iterator.hasNext());
        assertFalse(iterator.hasNext());
    }

    @Test
    public void next()
    {
        Singleton<name>Iterator iterator = new Singleton<name>Iterator(<(literal.(type))("5")>);
        assertTrue(iterator.hasNext());
        assertEquals(<(wideLiteral.(type))("5")>, iterator.next()<(wideDelta.(type))>);

        assertFalse(iterator.hasNext());
        try
        {
            iterator.next();
            fail("NoSuchElementException should have been thrown");
        }
        catch (NoSuchElementException e)
        {
            //Expected
        }
    }
}

>>
