import "copyright.stg"
import "primitiveEquals.stg"
import "primitiveHashCode.stg"
import "primitiveLiteral.stg"

targetPath() ::= "org/eclipse/collections/impl/tuple/primitive"

fileName(primitive) ::= "<primitive.name>BooleanPairImplTest"

isTest() ::= "true"

skipBoolean() ::= "true"

class(primitive) ::= <<
<body(primitive.type, primitive.name)>
>>

body(type, name) ::= <<
<copyright()>

package org.eclipse.collections.impl.tuple.primitive;

import org.eclipse.collections.impl.test.Verify;
import org.eclipse.collections.impl.tuple.Tuples;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;

/**
 * JUnit test for {@link <name>BooleanPairImpl}.
 *
 * This file was automatically generated from template file primitiveBooleanPairImplTest.stg.
 */
public class <name>BooleanPairImplTest
{
    @Test
    public void testEqualsAndHashCode()
    {
        Verify.assertEqualsAndHashCode(PrimitiveTuples.pair(<(literal.(type))("1")>, true), PrimitiveTuples.pair(<(literal.(type))("1")>, true));
        assertNotEquals(PrimitiveTuples.pair(<(literal.(type))("1")>, false), PrimitiveTuples.pair(<(literal.(type))("1")>, true));
        assertEquals(Tuples.pair(<(literal.(type))("1")>, true).hashCode(), PrimitiveTuples.pair(<(literal.(type))("1")>, true).hashCode());
    }

    @Test
    public void getOne()
    {
        assertEquals(<(literal.(type))("1")>, PrimitiveTuples.pair(<(literal.(type))("1")>, true).getOne(), <(literal.(type))("0")>);
        assertEquals(<(literal.(type))("3")>, PrimitiveTuples.pair(<(literal.(type))("3")>, true).getOne(), <(literal.(type))("0")>);
    }

    @Test
    public void getTwo()
    {
        assertTrue(PrimitiveTuples.pair(<(literal.(type))("1")>, true).getTwo());
        assertFalse(PrimitiveTuples.pair(<(literal.(type))("1")>, false).getTwo());
    }

    @Test
    public void testToString()
    {
        assertEquals("<(toStringLiteral.(type))("1")>:true", PrimitiveTuples.pair(<(literal.(type))("1")>, true).toString());
        assertEquals("<(toStringLiteral.(type))("2")>:false", PrimitiveTuples.pair(<(literal.(type))("2")>, false).toString());
        assertNotEquals("<(toStringLiteral.(type))("2")>, false", PrimitiveTuples.pair(<(literal.(type))("2")>, false).toString());
    }

    @Test
    public void compareTo()
    {
        assertEquals(-1, PrimitiveTuples.pair(<(literal.(type))("1")>, true).compareTo(PrimitiveTuples.pair(<(literal.(type))("2")>, false)));
        assertEquals(0, PrimitiveTuples.pair(<(literal.(type))("1")>, true).compareTo(PrimitiveTuples.pair(<(literal.(type))("1")>, true)));
        assertEquals(1, PrimitiveTuples.pair(<(literal.(type))("1")>, true).compareTo(PrimitiveTuples.pair(<(literal.(type))("1")>, false)));
    }
}

>>
