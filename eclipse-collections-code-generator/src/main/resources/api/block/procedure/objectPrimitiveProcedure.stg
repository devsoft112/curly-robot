import "copyright.stg"

targetPath() ::= "org/eclipse/collections/api/block/procedure/primitive"

fileName(primitive) ::= "Object<primitive.name>Procedure"

class(primitive) ::= <<
<body(primitive.type, primitive.name)>
>>

body(type, name) ::= <<
<copyright()>

package org.eclipse.collections.api.block.procedure.primitive;

import java.io.Serializable;

/**
 * A two argument procedure that takes a type T and primitive <type> as the arguments.
 * This file was automatically generated from template file objectPrimitiveProcedure.stg.
 *
 * @since 3.0.
 */
@FunctionalInterface
public interface Object<primitive.name>Procedure\<T>
        extends <if(primitive.specializedStream)>java.util.function.Obj<name>Consumer\<T>, <endif>Serializable
{
    void value(T each, <type> parameter);
<if(primitive.specializedStream)>

    @Override
    default void accept(T each, <type> parameter)
    {
        this.value(each, parameter);
    }
<endif>
}

>>
