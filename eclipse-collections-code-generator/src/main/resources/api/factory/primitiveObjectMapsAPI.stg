import "copyrightAndOthers.stg"

targetPath() ::= "org/eclipse/collections/api/factory/primitive"

fileName(primitive) ::= "<primitive.name>ObjectMaps"

skipBoolean() ::= "true"

class(primitive) ::= <<
<body(primitive.type, primitive.name)>
>>

body(type, name) ::= <<
<copyrightAndOthers()>

package org.eclipse.collections.api.factory.primitive;

import org.eclipse.collections.api.factory.ServiceLoaderUtils;
import org.eclipse.collections.api.factory.map.primitive.Immutable<name>ObjectMapFactory;
import org.eclipse.collections.api.factory.map.primitive.Mutable<name>ObjectMapFactory;

/**
 * <name>ObjectMaps is a static utility for creating {@link Immutable<name>ObjectMapFactory} and {@link Mutable<name>ObjectMapFactory}.
 * This file was automatically generated from template file primitiveObjectMapsAPI.stg.
 *
 * @since 11.1.
 */
@SuppressWarnings("ConstantNamingConvention")
public final class <name>ObjectMaps
{
    public static final Immutable<name>ObjectMapFactory immutable =
            ServiceLoaderUtils.loadServiceClass(Immutable<name>ObjectMapFactory.class);
    public static final Mutable<name>ObjectMapFactory mutable =
            ServiceLoaderUtils.loadServiceClass(Mutable<name>ObjectMapFactory.class);

    private <name>ObjectMaps()
    {
        throw new AssertionError("Suppress default constructor for noninstantiability");
    }
}

>>
